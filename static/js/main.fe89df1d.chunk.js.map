{"version":3,"sources":["Header.js","firebase.js","TinderCards.js","SwipeButtons.js","Chat.js","Chats.js","ChatScreen.js","App.js","serviceWorker.js","index.js"],"names":["Header","backButton","history","useHistory","className","IconButton","onClick","replace","fontSize","to","src","alt","database","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","TinderCards","useState","people","setPeople","useEffect","unsubscribe","collection","onSnapshot","snapshot","docs","map","doc","data","person","preventSwipe","style","backgroundImage","url","name","SwipeButtons","Chat","message","profilePic","timestamp","Avatar","Chats","ChatScreen","input","setInput","image","messages","setMessages","type","value","onChange","e","target","preventDefault","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.fe89df1d.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Header.css\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport ForumIcon from \"@material-ui/icons/Forum\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nfunction Header({ backButton }) {\n  const history = useHistory();\n  return (\n    <div className=\"header\">\n      {backButton ? (\n        <IconButton onClick={() => history.replace(backButton)}>\n          <ArrowBackIosIcon className=\"header__icon\" fontSize=\"large\" />\n        </IconButton>\n      ) : (\n        <IconButton>\n          <PersonIcon className=\"header__icon\" fontSize=\"large\" />\n        </IconButton>\n      )}\n      <Link to=\"/\">\n        <img\n          className=\"header__logo\"\n          src=\"https://1000logos.net/wp-content/uploads/2018/07/tinder-logo.png\"\n          alt=\"tinder logo\"\n        />\n      </Link>\n      <Link to=\"/chat\">\n        <IconButton>\n          <ForumIcon className=\"header__icon\" fontSize=\"large\" />\n        </IconButton>\n      </Link>\n    </div>\n  );\n}\n\nexport default Header;\n","import firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBKUgIUPhrx-zL-DEKTHUqVPAfUa6kKlOw\",\n  authDomain: \"tinder-clone-5b434.firebaseapp.com\",\n  projectId: \"tinder-clone-5b434\",\n  storageBucket: \"tinder-clone-5b434.appspot.com\",\n  messagingSenderId: \"900312411579\",\n  appId: \"1:900312411579:web:96abb94512607f81d0289e\",\n  measurementId: \"G-E5SVR821H5\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst database = firebaseApp.firestore();\n\nexport default database;","import React, { useState, useEffect } from \"react\";\nimport TinderCard from \"react-tinder-card\";\nimport \"./TinderCards.css\";\nimport database from \"./firebase\";\n\nfunction TinderCards() {\n  const [people, setPeople] = useState([]);\n\n  useEffect(() => {\n    const unsubscribe = database\n      .collection(\"people\")\n      .onSnapshot((snapshot) =>\n        setPeople(snapshot.docs.map((doc) => doc.data()))\n      );\n\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  return (\n    <div>\n      <div className=\"tinderCards__cardContainer\">\n        {people.map((person) => (\n          <TinderCard\n            className=\"swipe\"\n            key={person.name}\n            preventSwipe={[\"up\", \"down\"]}\n          >\n            <div\n              style={{ backgroundImage: `url(${person.url})` }}\n              className=\"card\"\n            >\n              <h3>{person.name}</h3>\n            </div>\n          </TinderCard>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default TinderCards;\n","import React from \"react\";\nimport \"./SwipeButtons.css\";\nimport ReplayIcon from \"@material-ui/icons/Replay\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport StarRateIcon from \"@material-ui/icons/StarRate\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FlashOnIcon from \"@material-ui/icons/FlashOn\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst SwipeButtons = () => {\n  return (\n    <div className=\"swipeButtons\">\n      <IconButton className=\"swipeButtons__repeat\">\n        <ReplayIcon fontSize=\"large\" />\n      </IconButton>\n      <IconButton className=\"swipeButtons__left\">\n        <CloseIcon fontSize=\"large\" />\n      </IconButton>\n      <IconButton className=\"swipeButtons__star\">\n        <StarRateIcon fontSize=\"large\" />\n      </IconButton>\n      <IconButton className=\"swipeButtons__right\">\n        <FavoriteIcon fontSize=\"large\" />\n      </IconButton>\n      <IconButton className=\"swipeButtons__lightning\">\n        <FlashOnIcon fontSize=\"large\" />\n      </IconButton>\n    </div>\n  );\n};\n\nexport default SwipeButtons;\n","import React from \"react\";\nimport \"./Chat.css\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { Link } from \"react-router-dom\";\n\nconst Chat = ({ name, message, profilePic, timestamp }) => {\n  return (\n    <Link to={`/chat/${name}`}>\n      <div className=\"chat\">\n        <Avatar className=\"chat__image\" src={profilePic} />\n        <div className=\"chat__details\">\n          <h2>{name}</h2>\n          <p>{message}</p>\n        </div>\n        <p className=\"chat__timestamp\">{timestamp}</p>\n      </div>\n    </Link>\n  );\n};\n\nexport default Chat;\n","import React from \"react\";\nimport \"./Chats.css\";\nimport Chat from \"./Chat\"\n\nconst Chats = () => {\n  return <div className=\"chats\">\n      <Chat\n      name=\"Henry Cavill\"\n      message=\"Helloo ..\" \n      timestamp=\"6 mins ago\" \n      profilePic=\"https://856596.smushcdn.com/1855360/wp-content/uploads/2020/03/Top-10-Worlds-Most-Handso-me-Men-in-2020-henry-cavill-fillgapnews-696x435.jpg?lossy=1&strip=1&webp=1\"\n      />\n      <Chat\n      name=\"Omar Borkan Al Gala\"\n      message=\"hii\" \n      timestamp=\"1 hr ago\" \n      profilePic=\"https://856596.smushcdn.com/1855360/wp-content/uploads/2020/03/Omar-Borkan-Al-Gala.jpg?lossy=1&strip=1&webp=1\"/>\n      <Chat\n      name=\"Tom Cruise\"\n      message=\"Awooo\" \n      timestamp=\"4 hrs ago\" \n      profilePic=\"https://856596.smushcdn.com/1855360/wp-content/uploads/2020/03/tom-cruise-696x392.jpeg?lossy=1&strip=1&webp=1\"/>\n  </div>;\n};\n\nexport default Chats;\n","import React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport \"./ChatScreen.css\";\n\nconst ChatScreen = () => {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([\n    {\n      name: \"Labrador\",\n      image:\n        \"https://gooddoggies.online/wp-content/uploads/2020/06/5-Tips-To-Training-A-Labrador-Puppy-1.jpg\",\n      message: \"Hey\",\n    },\n    {\n      name: \"Labrador\",\n      image:\n        \"https://gooddoggies.online/wp-content/uploads/2020/06/5-Tips-To-Training-A-Labrador-Puppy-1.jpg\",\n      message: \"Bork bork bork\",\n    },\n    {\n      message: \"yo\",\n    },\n  ]);\n\n  const handleSend = (e) => {\n    e.preventDefault();\n    setMessages([...messages, { message: input }]);\n    setInput(\"\");\n  };\n  return (\n    <div className=\"chatScreen\">\n      <p className=\"chatScreen__timestamp\">\n        YOU MATCHED WITH LABRADOR ON 08/21/2020\n      </p>\n      {messages.map((message) =>\n        message.name ? (\n          <div className=\"chatScreen__message\">\n            <Avatar\n              className=\"chatScreen__image\"\n              alt={message.name}\n              src={message.image}\n            />\n            <p className=\"chatScreen__text\">{message.message}</p>\n          </div>\n        ) : (\n          <div className=\"chatScreen__message\">\n            <p className=\"chatScreen__owntext\">{message.message}</p>\n          </div>\n        )\n      )}\n      <form className=\"chatScreen__form\">\n        <input\n          className=\"chatScreen__input\"\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n        />\n        <button\n          onClick={handleSend}\n          type=\"submit\"\n          className=\"chatScreen__button\"\n        >\n          SEND\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatScreen;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport TinderCards from \"./TinderCards\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport SwipeButtons from \"./SwipeButtons\";\nimport Chats from \"./Chats\";\nimport ChatScreen from \"./ChatScreen\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/chat/:person\">\n            <Header backButton=\"/chat\" />\n            <ChatScreen/>\n          </Route>\n          <Route path=\"/chat\">\n            <Header backButton=\"/\" />\n            <Chats />\n          </Route>\n          <Route path=\"/\">\n            <Header />\n            <TinderCards />\n            <SwipeButtons />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}